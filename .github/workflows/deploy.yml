name: Deploy Auto ML API

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/ -v

      - name: Test API locally
        run: |
          python -c "
          import sys
          sys.path.append('.')
          from auto_ml.deployment.api.simple_api import app
          print('âœ… API imports successfully')
          "

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          branch: "main"

      - name: Health check
        run: |
          sleep 30
          curl -f ${{ secrets.HEROKU_APP_URL }}/health || exit 1

      - name: Notify deployment
        run: |
          echo "âœ… Deployment completed successfully!"
          echo "ðŸ”— App URL: ${{ secrets.HEROKU_APP_URL }}"
          echo "ðŸ“Š Health: ${{ secrets.HEROKU_APP_URL }}/health"
          echo "ðŸ“š Docs: ${{ secrets.HEROKU_APP_URL }}/docs"
